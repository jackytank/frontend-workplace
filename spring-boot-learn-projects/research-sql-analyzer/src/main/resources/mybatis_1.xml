<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.SampleMapper">

  <!-- SQL Fragment for column list -->
  <sql id="Existed_Entity_Column_List">
      COLUMN_1,
      COLUMN_2,
      COLUMN_3,
      COLUMN_4,
      COLUMN_5,
      COLUMN_6,
      COLUMN_7,
      COLUMN_8,
      COLUMN_9,
      COLUMN_10,
      COLUMN_11,
      COLUMN_12,
      COLUMN_13,
      COLUMN_14,
      COLUMN_15,
      COLUMN_16,
      COLUMN_17,
      COLUMN_18,
      COLUMN_19,
      COLUMN_20,
      COLUMN_21,
      COLUMN_22,
      TO_CHAR(CREATED_DATE,'yyyyMMdd'),
      TO_CHAR(UPDATED_DATE,'yyyyMMdd')
  </sql>

  <!-- Example SELECT with existed include - should mark all tables as R if <include> is present even if present or not present in this file  -->
  <select id="select01" resultType="map">
    select
      <include refid="Existed_Entity_Column_List" />
    from
      FIRST_TABLE A, SECOND_TABLE, THIRD_TABLE C, FOURTH_TABLE, FIFTH_TABLE E
    where ID = #{id}
  </select>

  <!-- Example SELECT with nonexisted include - still should mark all tables as R -->
  <select id="select02" resultType="map">
    select
      <include refid="Not_Exist_In_This_File_Maybe_In_Parent_Or_Java_Class" />
    from
      FIRST_TABLE A, SECOND_TABLE B, THIRD_TABLE C, FOURTH_TABLE, FIFTH_TABLE E
    where ID = #{id}
  </select>

  <!-- Example SELECT with "select 1" - should NOT mark TEST_TABLE_1 as R because "select 1" is just a simple existence check -->
  <select id="select03" resultType="String">
    select 1
    from TEST_TABLE_1
    where SOME_COL = #{id}
  </select>
  
  <!-- Example INSERT with SELECT - should mark NEW_TABLE as C and SOURCE_TABLE as R -->
  <insert id="insert01">
    insert into NEW_TABLE (ID, NAME, VALUE)
    select 
      SRC.ID,
      SRC.NAME,
      SRC.VALUE
    from SOURCE_TABLE SRC
    where SRC.ACTIVE = 'Y'
  </insert>

  <!-- Example UPDATE with subquery, should mark TARGET_TABLE as U and REFERENCE_TABLE as R -->
  <update id="update01">
    <![CDATA[
    update TARGET_TABLE
       set STATUS = '1',
           UPDATED_DATE = SYSDATE
    where exists (
      select ABC.CODE, ABC.NAME
      from REFERENCE_TABLE ABC
      where ABC.ID = TARGET_TABLE.ID
        and ABC.ACTIVE = 'Y'
    )
    ]]>
  </update>

  <!-- should only mark TEST_TABLE_1 as R (because TEST_TABLE_1 is the only table that a column is selected from) -->
  <select id="select04" resultType="String">
    select a.some_col
    from TEST_TABLE_1 a
    join TEST_TABLE_2 b
      on a.id = b.id
    where a.some_col = #{id}
  </select>

  <!-- should not mark all tables as R because COUNT(*) not referring any specific column -->
  <!-- same thing for other functions like AVG, SUM... -->
  <select id="select05" resultType="String">
    select COUNT(*)
    from TEST_TABLE_1, TEST_TABLE_2
  </select>

  <!-- should mark TEST_TABLE_1 as R because COUNT(a.*) is referring columns from TEST_TABLE_1 -->
  <!-- same thing for other functions like AVG, SUM... -->
  <select id="select06" resultType="String">
    select COUNT(a.*)
    from TEST_TABLE_1 a
  </select>

  <!-- similar to select05, should not mark any table as R -->
  <select id="select07" resultType="String">
    select AVG(*)
    from TEST_TABLE_1, TEST_TABLE_2
  </select>

  <!-- should only mark TEST_TABLE_1 as R because SUM(a.*) is referring columns from TEST_TABLE_1 -->
  <select id="select08" resultType="String">
    select SUM(a.*)
    from TEST_TABLE_1 a, TEST_TABLE_2 b
  </select>

  <!-- should mark both TEST_TABLE_1 and TEST_TABLE_2 as R 
   because SUM(a.*) is referring columns from TEST_TABLE_1 
   and b.OT_SOME_COLUMN_LALALA is referring column from TEST_TABLE_2 -->
  <select id="select09" resultType="String">
    select SUM(a.*), b.OT_SOME_COLUMN_LALALA, b.simpleCOL
    from TEST_TABLE_1 a
    , TEST_TABLE_2 b
  </select>

</mapper>
