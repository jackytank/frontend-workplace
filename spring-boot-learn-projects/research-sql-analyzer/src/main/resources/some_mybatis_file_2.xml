<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.AnotherMapper">

  <!-- Complex UPDATE example from your requirement -->
  <update id="update01">
    <![CDATA[
    update TABLE_A
       set STATUS_CODE = '8',
           UPDATED_DATE = TO_CHAR(SYSDATE,'YYYYMMDD'),
           UPDATED_TIME = TO_CHAR(SYSTIMESTAMP,'hh24missff6')
    where exists (
      select 1
      from TABLE_A CAU
      join (
        select
           to_char(add_months(to_date(concat(NKS.YEAR_COL,NKS.MONTH_COL), 'YYYYMM'),-1),'YYYYMM') as YM,
          NKS.DATE_COL
        from TABLE_B NKS
        where NKS.CODE = '0001'
          and NKS.SCHEDULE_CODE = #{scdCode, jdbcType=CHAR}
          and NKS.DATE_TYPE = 'D0011'
      ) D0011
      on D0011.YM = CAU.CALC_MONTH
      where D0011.DATE_COL < #{businessDay, jdbcType=CHAR}
        and CAU.STATUS_CODE = '0'
        and CAU.REG_NUMBER = TABLE_A.REG_NUMBER
    )
    ]]>
  </update>

  <!-- SELECT that actually reads columns -->
  <select id="select01" resultType="map">
    select
    A.ID,
    A.NAME,
    B.VALUE
    from MASTER_TABLE A
    left join DETAIL_TABLE B on A.ID = B.MASTER_ID
    where A.ACTIVE = 'Y'
  </select>

  <!-- SELECT with "select 1" pattern -->
  <select id="select03" resultType="int">
    select 1
    from CHECK_TABLE
    where CODE = #{code}
  </select>

  <update id="updateGeneric"> UPDATE SOME_TABLE T <set>
      T.COLUMN_A = #{valueA, jdbcType=GENERIC_TYPE},
      T.COLUMN_B = #{valueB, jdbcType=GENERIC_TYPE},
      T.COLUMN_C = #{valueC, jdbcType=GENERIC_TYPE},
      T.COLUMN_D = #{valueD, jdbcType=GENERIC_TYPE}
    </set>
    WHERE ( T.KEY_1, T.KEY_2, T.KEY_3, T.KEY_4, T.KEY_5, T.KEY_6 ) IN ( SELECT T2.KEY_1, T2.KEY_2,
    T2.KEY_3, T2.KEY_4, T2.KEY_5, MAX(T2.KEY_6) FROM SOME_TABLE T2 WHERE T2.KEY_1 = #{param1,
    jdbcType=GENERIC_TYPE} AND T2.KEY_2 = #{param2, jdbcType=GENERIC_TYPE} AND T2.KEY_3 = #{param3,
    jdbcType=GENERIC_TYPE} AND T2.KEY_4 = #{param4, jdbcType=GENERIC_TYPE} AND T2.KEY_5 = #{param5,
    jdbcType=GENERIC_TYPE} GROUP BY T2.KEY_1, T2.KEY_2, T2.KEY_3, T2.KEY_4, T2.KEY_5 ) </update>

</mapper>