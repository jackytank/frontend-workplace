services:
  # react:
  #   build: 
  #     context: ./react-frontend
  #     dockerfile: Dockerfile.prod
  #   container_name: myapp-react-frontend
  #   networks:
  #     - fe-be
  #   ports:
  #     - "3001:3001"
  #   volumes:
  #     - ./react-frontend:/myreact_dir
  #   restart: always
  #   tty: true
  #   depends_on:
  #     springboot: 
  #       condition: service_started
  #   mem_limit: 500M
  # springboot:
  #   build:
  #     context: ./springboot-backend
  #     dockerfile: Dockerfile.prod
  #   container_name: myapp-springboot
  #   environment:
  #     - MY_POSTGRES_HOST=mypostgres
  #     - MY_POSTGRES_PORT=5432
  #     - MY_POSTGRES_DB=postgres
  #     - MY_POSTGRES_USER=postgres
  #     - MY_POSTGRES_PASSWORD=postgres
  #     - MY_REDIS_HOST=myredis
  #     - MY_REDIS_PORT=6379
  #     - MY_REDIS_PASSWORD=mysupersecureredispassword42
  #     - MY_MONGO_HOST=mymongo
  #     - MY_MONGO_PORT=27017
  #     - MY_MONGO_DB=chatapp_db
  #     - MY_MONGO_USER=myuser
  #     - MY_MONGO_PASSWORD=mypassword
  #   volumes:
  #     - ./springboot-backend:/mybackend_dir
  #   ports:
  #     - "8081:8080"
  #   networks:
  #     - fe-be
  #     - be-db
  #   restart: always
  #   depends_on:
  #     mypostgres:
  #       condition: service_started
  #     myredis:
  #       condition: service_started
  #     mymongo: 
  #       condition: service_started
  #   mem_limit: 1.5G
  mypostgres:
    image: docker.io/postgres
    container_name: myapp-postgres
    restart: always
    ports:
      - "5432:5432"
    networks:
      - be-db
    volumes:
      - postgres-data:/var/lib/myapp/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 30s
      timeout: 30s
      retries: 3
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=ctccoa
    mem_limit: 500M
  myredis:
    image: docker.io/redis
    container_name: myapp-redis
    command: redis-server --requirepass mypassword
    networks:
      - be-db
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 3s
      retries: 30
    ports:
      - "6666:6379"
    volumes:
      - redis-data:/data
    restart: always
    mem_limit: 500M
  mymongo:
    image: mongo
    container_name: myapp-mongo
    restart: always
    networks:
      - be-db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=myuser
      - MONGO_INITDB_ROOT_PASSWORD=mypassword
      - MONGO_INITDB_DATABASE=chatapp_db
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data
  mypgadmin_web:
    image: dpage/pgadmin4
    container_name: myapp-pgadmin_web
    networks:
      - be-db
    user: "${UID}:${GID}"
    ports:
      - "5050:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - mypostgres
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=postgres@gmail.com
      - PGADMIN_DEFAULT_PASSWORD=postgres
  # cloudbeaver:
  #   image: dbeaver/cloudbeaver:latest
  #   container_name: cloudbeaver
  #   ports:
  #     - "5050:8978"
  #   volumes:
  #     - cloudbeaver-data:/opt/cloudbeaver/workspace
  #   restart: unless-stopped
  #   tty: true
  #   stdin_open: true
  # myoracledb-main:
  #   image: gvenzl/oracle-xe:21-faststart
  #   container_name: myapp-oracledb-main
  #   networks:
  #     - be-oracle1
  #   ports:
  #     - "1521:1521"
  #     - "5500:5500"
  #   environment:
  #     - ORACLE_PASSWORD=COAoracledbpwd
  #     - ORACLE_DATABASE=COA
  #     - APP_USER=coa
  #     - APP_USER_PASSWORD=coa
  #   volumes:
  #     - oracledb-main-data:/opt/myapp/main/oracle/oradata
  #   restart: always
  # myoracledb-second:
  #   image: gvenzl/oracle-xe:21-faststart
  #   container_name: myapp-oracledb-second
  #   networks:
  #     - be-oracle2
  #   ports:
  #     - "1522:1521"
  #     - "5501:5500"
  #   environment:
  #     - ORACLE_PASSWORD=COAoracledbpwd
  #     - ORACLE_DATABASE=COA
  #     - APP_USER=coa
  #     - APP_USER_PASSWORD=coa
  #   volumes:
  #     - oracledb-second-data:/opt/myapp/second/oracle/oradata
  #   restart: always
  # lobe-chat:
  #   image: lobehub/lobe-chat
  #   container_name: lobe-chat
  #   restart: always
  #   ports:
  #     - '3210:3210'
  #   environment:
  #     OPENAI_API_KEY: ${OPENAI_API_KEY}
  #     OPENAI_PROXY_URL: ${OPENAI_PROXY_URL:-"https://openrouter.ai/api/v1"}
  #     ACCESS_CODE: ${ACCESS_CODE:-"1221"}

  # neo4j
  # myneo4j:
  #   image: neo4j:latest
  #   container_name: myapp-neo4j
  #   restart: always
  #   ports:
  #     - "7474:7474"
  #     - "7687:7687"
  #   environment:
  #     - NEO4J_AUTH=neo4j/password
  #   volumes:
  #     - neo4j-data:/myneo4j/data
  #   networks:
  #     - be-db
  hbbs:
    container_name: hbbs
    ports:
      - 21115:21115
      - 21116:21116
      - 21116:21116/udp
      - 21118:21118
    image: rustdesk/rustdesk-server:latest
    command: hbbs -r 192.168.20.41:21117
    volumes:
      - ./data:/root
    networks:
      - rustdesk-net
    depends_on:
      - hbbr
    restart: unless-stopped

  hbbr:
    container_name: hbbr
    ports:
      - 21117:21117
      - 21119:21119
    image: rustdesk/rustdesk-server:latest
    command: hbbr
    volumes:
      - ./data:/root
    networks:
      - rustdesk-net
    restart: unless-stopped
networks:
  fe-be: {}
  be-db: {}
  # be-oracle1: {}
  # be-oracle2: {}
  rustdesk-net:
    external: false
volumes:
  postgres-data: {}
  neo4j-data: {}
  redis-data: {}
  mongo-data: {}
  pgadmin-data: {}
  # oracledb-main-data: {}
  # oracledb-second-data: {}
  # cloudbeaver-data: {}
