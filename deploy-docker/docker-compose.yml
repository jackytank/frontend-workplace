services:
  # remix:
  #   build:
  #     context: ./remix-frontend
  #     dockerfile: Dockerfile.prod
  #   container_name: myshittyapp-remix-frontend
  #   networks:
  #     - fe-be
  #   volumes:
  #     - ./remix-frontend/app:/myremix_dir/app
  #   ports:
  #     - "3000:3000"
  #   tty: true
  #   depends_on:
  #     - springboot
  #   mem_limit: 500M
  # react:
  #   build: 
  #     context: ./react-frontend
  #     dockerfile: Dockerfile.prod
  #   container_name: myshittyapp-react-frontend
  #   networks:
  #     - fe-be
  #   ports:
  #     - "3001:3001"
  #   # volumes:
  #   #   - ./react-frontend:/myreact_dir
  #   restart: always
  #   tty: true
  #   depends_on:
  #     - springboot
  #   mem_limit: 500M
  springboot:
    build: 
      context: ./springboot-backend
      dockerfile: Dockerfile.dev
    container_name: myshittyapp-springboot
    environment:
      - MY_POSTGRES_HOST=mypostgres
      - MY_POSTGRES_PORT=5432
      - MY_POSTGRES_DB=postgres
      - MY_POSTGRES_USER=postgres
      - MY_POSTGRES_PASSWORD=postgres
      - MY_REDIS_HOST=myredis
      - MY_REDIS_PORT=6379
      - MY_REDIS_PASSWORD=mysupersecureredispassword42
      - MY_MONGO_HOST=mymongo
      - MY_MONGO_PORT=27017
      - MY_MONGO_DB=chatapp_db
      - MY_MONGO_USER=myuser
      - MY_MONGO_PASSWORD=mypassword
    volumes:
      - ./springboot-backend:/mybackend_dir
    ports:
      - "8080:8080"
    networks:
      - fe-be
      - be-db
    restart: always
    depends_on:
      mypostgres:
        condition: service_healthy
      myredis:
        condition: service_healthy
      mymongo:
        condition: service_healthy
    mem_limit: 1.5G
  mypostgres:
    image: postgres:16.2-alpine
    container_name: myshittyapp-postgres
    restart: always
    ports:
      - "5555:5432"
    networks:
      - be-db
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    mem_limit: 500M
  myredis: 
    image: redis:7.2.4-alpine
    container_name: myshittyapp-redis
    command: redis-server --requirepass mysupersecureredispassword42
    networks:
      - be-db
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "6666:6379"
    volumes:
      - redis-data:/data
    restart: always
    mem_limit: 500M
  mymongo: 
    image: mongo
    container_name: myshittyapp-mongo
    restart: always
    networks:
      - be-db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=myuser
      - MONGO_INITDB_ROOT_PASSWORD=mypassword
      - MONGO_INITDB_DATABASE=chatapp_db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data
  mymongo-express:
    image: mongo-express
    container_name: myshittyapp-mongoexpress
    restart: always
    ports:
      - "8081:8081"
    networks:
      - be-db
    environment:
      - ME_CONFIG_MONGODB_SERVER=mymongo
      - ME_CONFIG_MONGODB_ADMINUSERNAME=myuser
      - ME_CONFIG_MONGODB_ADMINPASSWORD=mypassword
    depends_on:
      mymongo:
        condition: service_healthy
networks:
  fe-be: {}
  be-db: {}
volumes:
  postgres-data: {}
  redis-data: {}
  mongo-data: {}

  