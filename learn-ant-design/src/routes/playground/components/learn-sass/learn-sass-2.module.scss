@mixin font-fl($font){
    &:after{
        @if(type-of($font) == string){
            content: 'My font is: #{$font}';
        } @else{
            content: 'Sorry, the argument #{$font} is a: #{type-of($font)}';
        }
    }
}

.h2-font-fl-1{
    @include font-fl(sans-serif)
}

$fg-color-list: "red", "yellow", "lightblue";
@mixin fg-color($property){
    @each $item in $fg-color-list{
        $color-length: str-length($item);
        @if($color-length % 2 != 0){
            #{$property}: unquote($item);
        }
    }
}

$list-fg-size: "10px", "50px";
@mixin fg-font-size($size-string){
    @if(type-of($size-string) == string and $size-string == "small"){
        font-size: unquote(nth($list-fg-size, 1));
    }@else if(type-of($size-string) == string and $size-string == "big"){
        font-size: unquote(nth($list-fg-size, 2));
    }@else{
        content: "Sorry the argument must be either \"small\"/\"big\"";
    }
}

.h2-fg-color-fg-font-size-1{
    @include fg-color(color);
    @include fg-font-size("big");
}

$list-map-button-state: (
    success: lightgreen,
    alert: red,
    info: lightblue,
);

@mixin button-state($btn-state){
    @if(length($list-map-button-state) > 2 and length($list-map-button-state) < 5){
        background-color: map-get($list-map-button-state, $btn-state);
    }@else{
        background-color: grey;
    }
}

.btn-button-state{
    @include button-state(alert)
}

.h2-if-directive{
    color: if(1 == 3, red, blue);
}

.p-if-directive{
    @if 1 + 2 == 2 {
        color: red;
    }
    @if ((1 + 1 <= 2) and (11 > 3)){
        color: blue;
    }
    @if null {
        color: yellow;
    }
}

$type-else-if: "monster";

.p-else-if-directive{
    @if unquote($type-else-if) == occean or 3+1==2{
        color: blue;
    }@else if unquote($type-else-if) == monster and 3+2==5{
        color: green;
    }@else{
        color: black;
    }
}